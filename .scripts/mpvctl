#!/usr/bin/env bash
# This script requires:
# - that the directory $HOME/.mpv exist 
# - that the program socat be installed
# - that you start mpv with the unix socket feature pointing at that directory
#   I recommend an alias in your .bashrc or equivalent file:
#       alias mpv="mpv --input-unix-socket=$HOME/.mpv/socket"

socket="$HOME/.mpv/socket"

mpvcommand() {
    # JSON preamble.
    local tosend='{ "command": ['
    # adding in the parameters.
    for arg in "$@"; do
        tosend="$tosend \"$arg\","
    done
    # closing it up.
    tosend=${tosend%?}' ] }'
    # send it along and ignore output.
    # to print output just remove the redirection to /dev/null
    echo $tosend | socat - $socket
}

if [ "$1" = "stop" ] ; then
  # exit mpv
  mpvcommand 'quit'
elif [ "$1" = "play-pause" ] ; then
  # toggle play-pause
  mpvcommand 'cycle' 'pause'
elif [ "$1" = "pause" ] ; then
  # stop playing
  mpvcommand 'set' 'pause' 'yes'
elif [ "$1" = "play" ] ; then
  # start playing
  mpvcommand 'set' 'pause' 'no'
elif [ "$1" = "next" ] ; then
# play next item in playlist
  mpvcommand 'playlist_next'
elif [ "$1" = "previous" ] ; then
# play previous item in playlist
  mpvcommand 'playlist_prev'
elif [ "$1" = "add" ] ; then
  # add item(s) to playlist
  shift &&\
  for video in "$@"; do
      mpvcommand 'loadfile' "$video" 'append-play';
  done;
elif [ "$1" = "title" ] ; then
  # display name of current track
  mpvcommand 'get_property_string' 'media-title' | jq -r ".data"
elif [ "$1" = "get_paused" ] ; then
# play previous item in playlist
  mpvcommand 'get_property_string' 'pause'| jq -r ".data"
else
  exit 1
fi
